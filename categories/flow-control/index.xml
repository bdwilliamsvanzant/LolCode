<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flow Control on REEECode Docs</title>
    <link>/categories/flow-control/</link>
    <description>Recent content in Flow Control on REEECode Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2016 08:55:44 -0400</lastBuildDate>
    
	<atom:link href="/categories/flow-control/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Conditionals</title>
      <link>/lolcode/conditionals/</link>
      <pubDate>Thu, 05 May 2016 08:55:44 -0400</pubDate>
      
      <guid>/lolcode/conditionals/</guid>
      <description>If-Then The traditional if/then construct is a very simple construct. In the base form, there are four keywords: lol, lel, lmao, and lmfao.
lol branches to the block begun with lel, and branches to the lmao block if IT is FAIL. The code block introduced with lel is implicitly closed when lmao is reached. The lmao block is closed with lmfao. The general form is then as follows:
&amp;lt;expression&amp;gt; lol lel &amp;lt;code block&amp;gt; lmao &amp;lt;code block&amp;gt; lmfao Case The LOLCODE keyword for switches is WTF?</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>/lolcode/loops/</link>
      <pubDate>Thu, 05 May 2016 08:55:44 -0400</pubDate>
      
      <guid>/lolcode/loops/</guid>
      <description>Simple loops are demarcated with IM LOOPY and YOUR NOT LOOPY. Loops
Iteration loops have the form:
IM LOOPY &amp;lt;operation&amp;gt; &amp;amp;|| &amp;lt;variable&amp;gt; &amp;lt;code block&amp;gt; YOUR NOT LOOPY</description>
    </item>
    
  </channel>
</rss>