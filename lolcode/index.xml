<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lolcodes on REEECode Docs</title>
    <link>/lolcode/</link>
    <description>Recent content in Lolcodes on REEECode Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2016 08:57:54 -0400</lastBuildDate>
    
	<atom:link href="/lolcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calling</title>
      <link>/lolcode/calling/</link>
      <pubDate>Thu, 05 May 2016 08:57:54 -0400</pubDate>
      
      <guid>/lolcode/calling/</guid>
      <description>Put functions name in code with a pair of ~~ to have the function run there. Or simply use a cell phone.</description>
    </item>
    
    <item>
      <title>Definition</title>
      <link>/lolcode/definition/</link>
      <pubDate>Thu, 05 May 2016 08:57:54 -0400</pubDate>
      
      <guid>/lolcode/definition/</guid>
      <description>To do a define we YEET then set an expresion and close with YANK.</description>
    </item>
    
    <item>
      <title>Returning</title>
      <link>/lolcode/returning/</link>
      <pubDate>Thu, 05 May 2016 08:57:54 -0400</pubDate>
      
      <guid>/lolcode/returning/</guid>
      <description>Return from the function is accomplished by GLOMP.</description>
    </item>
    
    <item>
      <title>Conditionals</title>
      <link>/lolcode/conditionals/</link>
      <pubDate>Thu, 05 May 2016 08:55:44 -0400</pubDate>
      
      <guid>/lolcode/conditionals/</guid>
      <description>If-Then The traditional if/then construct is a very simple construct. In the base form, there are four keywords: lol, lel, lmao, and lmfao.
lol branches to the block begun with lel, and branches to the lmao block if IT is FAIL. The code block introduced with lel is implicitly closed when lmao is reached. The lmao block is closed with lmfao. The general form is then as follows:
&amp;lt;expression&amp;gt; lol lel &amp;lt;code block&amp;gt; lmao &amp;lt;code block&amp;gt; lmfao Case The LOLCODE keyword for switches is WTF?</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>/lolcode/loops/</link>
      <pubDate>Thu, 05 May 2016 08:55:44 -0400</pubDate>
      
      <guid>/lolcode/loops/</guid>
      <description>Simple loops are demarcated with IM LOOPY and YOUR NOT LOOPY. Loops
Iteration loops have the form:
IM LOOPY &amp;lt;operation&amp;gt; &amp;amp;|| &amp;lt;variable&amp;gt; &amp;lt;code block&amp;gt; YOUR NOT LOOPY</description>
    </item>
    
    <item>
      <title>Boolean</title>
      <link>/lolcode/boolean/</link>
      <pubDate>Thu, 05 May 2016 08:46:10 -0400</pubDate>
      
      <guid>/lolcode/boolean/</guid>
      <description>Boolean operators working on REEEEE are as follows:
BOTH  &amp;amp;  TRUE if both pass EITHER OF  |  TRUE with one pass WON OF  &amp;amp;|  TRUE if x NOT Y NOT  TRUE if value isnt that of x</description>
    </item>
    
    <item>
      <title>Comparison</title>
      <link>/lolcode/comparison/</link>
      <pubDate>Thu, 05 May 2016 08:46:10 -0400</pubDate>
      
      <guid>/lolcode/comparison/</guid>
      <description>x NOMY y is greater or equal
x MONY y is lesser or equal
x NOM y greater
x MON y lesser</description>
    </item>
    
    <item>
      <title>Concatenation</title>
      <link>/lolcode/concatenation/</link>
      <pubDate>Thu, 05 May 2016 08:46:10 -0400</pubDate>
      
      <guid>/lolcode/concatenation/</guid>
      <description>We uWu different variables we want to combine.
Ex. &amp;ldquo;I HAZ&amp;rdquo; uWu &amp;ldquo;COOKIES&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Math</title>
      <link>/lolcode/math/</link>
      <pubDate>Thu, 05 May 2016 08:46:10 -0400</pubDate>
      
      <guid>/lolcode/math/</guid>
      <description>EWW you do numbers and stuff.
Addition: XD+XD
Subtraction: XD-XD
Division: XD/XD
Multiplication: XD*XD
Exponent: XD^XD</description>
    </item>
    
    <item>
      <title></title>
      <link>/lolcode/about_types/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/about_types/</guid>
      <description>(updated from 1.1)
The variable types that REEECODE currently recognizes are: strings (RE), integers (REE), floats (REEEE), and booleans (REEEEE). Typing is handled dynamically. Until a variable is given an initial value, it is untyped (EEER).</description>
    </item>
    
    <item>
      <title>Booleans</title>
      <link>/lolcode/booleans/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/booleans/</guid>
      <description>The two REEEEE values are TRUE and FAIL.</description>
    </item>
    
    <item>
      <title>Numerical Types</title>
      <link>/lolcode/numerical/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/numerical/</guid>
      <description>A RE is 1 while, A REEEE is a 1.0.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>/lolcode/strings/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/strings/</guid>
      <description>String literals (RE) are marked with double quotation marks (&amp;ldquo;). Within a string, all characters represent their literal value except the colon (:), which is the escape character. Characters immediately following the colon also take on a special meaning.
 XDNEWXD represents a newline (\n) XDTABXD represents a tab (\t) XD&amp;rdquo;XD represents a literal double quote (&amp;ldquo;) XD:XD represents a single literal colon (:)  </description>
    </item>
    
    <item>
      <title>Types</title>
      <link>/lolcode/types/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/types/</guid>
      <description>The TYPE type only has the values of REEEEE, EEER, REE, REEEE, RE, and RAWR, as bare words. ALL is REEEEE and REEEEE is all XD.</description>
    </item>
    
    <item>
      <title>Untyped</title>
      <link>/lolcode/untyped/</link>
      <pubDate>Thu, 05 May 2016 08:41:21 -0400</pubDate>
      
      <guid>/lolcode/untyped/</guid>
      <description>The untyped type (EEER) cannot be implicitly cast into any type except a REEEEEE. A cast into REEEEEE makes the variable FAIL. Any operations on a EEER that assume another type (e.g., math) results in an error.</description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>/lolcode/comments/</link>
      <pubDate>Wed, 04 May 2016 17:35:01 -0400</pubDate>
      
      <guid>/lolcode/comments/</guid>
      <description>Comments are made with &amp;ldquo;ITS NOT A PHASE&amp;rdquo; and ended with &amp;ldquo;YOU DONT UNDERSTAND MOM&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Whitespace</title>
      <link>/lolcode/whitespace/</link>
      <pubDate>Wed, 04 May 2016 17:35:01 -0400</pubDate>
      
      <guid>/lolcode/whitespace/</guid>
      <description>Space is so big its scary so we RAWR it.</description>
    </item>
    
  </channel>
</rss>